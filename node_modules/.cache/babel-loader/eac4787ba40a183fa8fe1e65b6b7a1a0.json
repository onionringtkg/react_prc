{"ast":null,"code":"var _jsxFileName = \"/Users/okanotakumi/Desktop/git/react-prc/src/components/events_index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { readEvents } from '../actions';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom'; //import PropTypes from 'prop-types';\n\nclass EventsIndex extends Component {\n  //コンポーネントがマウントされた際に呼ばれるメソッド\n  //イベント一覧を表示する\n  componentDidMount() {\n    this.props.readEvents();\n  }\n\n  renderEvents() {\n    return _.map(this.props.events, event => /*#__PURE__*/React.createElement(\"tr\", {\n      key: event.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, event.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/events/${event.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, event.title)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, event.body)));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, \"Body\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, this.renderEvents())), /*#__PURE__*/React.createElement(Link, {\n      to: \"/events/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"New Event\"));\n  }\n\n} //stateとactioをcomponentに関連づけるコーディング　start\n//このコンポーネントに必要なものをstateから取り出して、どのオブジェクトをcomponentのpropsとして対応させるのかを関数の戻り値で定義\n\n\nconst mapStateToProps = state => ({\n  events: state.events\n}); //あるアクションが発生した際に、reducerに状態に応じてActionを実行させる\n//const mapDispatchToProps = ({increment, decrement})でも同意\n\n\nconst mapDispatchToProps = {\n  readEvents\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsIndex); //stateとactioをcomponentに関連づけるコーディング　fin","map":{"version":3,"sources":["/Users/okanotakumi/Desktop/git/react-prc/src/components/events_index.js"],"names":["React","Component","connect","readEvents","_","Link","EventsIndex","componentDidMount","props","renderEvents","map","events","event","id","title","body","render","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAClC;AACA;AACAM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWL,UAAX;AACD;;AAEDM,EAAAA,YAAY,GAAG;AACb,WAAOL,CAAC,CAACM,GAAF,CAAM,KAAKF,KAAL,CAAWG,MAAjB,EAAyBC,KAAK,iBACnC;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACC,EAAX,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,WAAUD,KAAK,CAACC,EAAG,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACE,KADT,CADF,CAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,KAAK,CAACG,IAAX,CAPF,CADK,CAAP;AAWD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF,CADF,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,YAAL,EADH,CATA,CADF,eAeE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAfF,CADF;AAmBD;;AAzCiC,C,CA4CpC;AACA;;;AACA,MAAMQ,eAAe,GAAGC,KAAK,KAAK;AAAEP,EAAAA,MAAM,EAAEO,KAAK,CAACP;AAAhB,CAAL,CAA7B,C,CACA;AACA;;;AACA,MAAMQ,kBAAkB,GAAI;AAAEhB,EAAAA;AAAF,CAA5B;AAEA,eAAeD,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,WAA7C,CAAf,C,CACA","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { readEvents } from '../actions';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\n//import PropTypes from 'prop-types';\n\nclass EventsIndex extends Component {\n  //コンポーネントがマウントされた際に呼ばれるメソッド\n  //イベント一覧を表示する\n  componentDidMount() {\n    this.props.readEvents()\n  }\n\n  renderEvents() {\n    return _.map(this.props.events, event => (\n      <tr key={event.id}>\n        <td>{event.id}</td>\n        <td>\n          <Link to={`/events/${event.id}`}>\n            {event.title}\n          </Link>\n        </td>\n        <td>{event.body}</td>\n      </tr>\n    ))\n  }\n\n  render() {\n    return (\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Title</th>\n              <th>Body</th>\n            </tr>\n          </thead>\n\n        <tbody>\n          {this.renderEvents()}\n        </tbody>\n        </table>\n\n        <Link to=\"/events/new\">New Event</Link>\n      </div>\n    )\n  }\n}\n\n//stateとactioをcomponentに関連づけるコーディング　start\n//このコンポーネントに必要なものをstateから取り出して、どのオブジェクトをcomponentのpropsとして対応させるのかを関数の戻り値で定義\nconst mapStateToProps = state => ({ events: state.events })\n//あるアクションが発生した際に、reducerに状態に応じてActionを実行させる\n//const mapDispatchToProps = ({increment, decrement})でも同意\nconst mapDispatchToProps = ({ readEvents })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsIndex)\n//stateとactioをcomponentに関連づけるコーディング　fin\n"]},"metadata":{},"sourceType":"module"}