{"ast":null,"code":"var _jsxFileName = \"/Users/okanotakumi/Desktop/git/react-prc/src/components/events_new.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form'; //import { psotEvent } from '../actions';\n\nclass EventsNew extends Component {\n  renderField(field) {\n    const {\n      input,\n      label,\n      type,\n      meta: {\n        touched,\n        error\n      }\n    } = field;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n      placeholder: label,\n      type: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    })), touched && error && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 30\n      }\n    }, error));\n  } //redux-formを使用した入力formの実装 (field)\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Title\",\n      name: \"title\",\n      type: \"text\",\n      component: this.renderField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Body\",\n      name: \"body\",\n      type: \"text\",\n      component: this.renderField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      disabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))));\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n  if (!values.title) error.titile = \"Enter a tit\";\n  return errors;\n}; //あるアクションが発生した際に、reducerに状態に応じてActionを実行させる\n//const mapDispatchToProps = ({ postEvent })\n\n\nexport default connect(null, null)( //redeux-formでeventsnewをデコレートする\nreduxForm({\n  validate,\n  form: 'eventNewForm'\n})(EventsNew));","map":{"version":3,"sources":["/Users/okanotakumi/Desktop/git/react-prc/src/components/events_new.js"],"names":["React","Component","connect","Link","Field","reduxForm","EventsNew","renderField","field","input","label","type","meta","touched","error","render","validate","values","errors","title","titile","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC,C,CAEA;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAChCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,IAAf;AAAqBC,MAAAA,IAAI,EAAE;AAACC,QAAAA,OAAD;AAAUC,QAAAA;AAAV;AAA3B,QAAgDN,KAAtD;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,+CAAWC,KAAX;AAAkB,MAAA,WAAW,EAAEC,KAA/B;AAAsC,MAAA,IAAI,EAAEC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAEGE,OAAO,IAAIC,KAAX,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,KAAP,CAFvB,CADF;AAMD,GAV+B,CAYhC;;;AACAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,OAAb;AAAqB,MAAA,IAAI,EAAC,OAA1B;AAAkC,MAAA,IAAI,EAAC,MAAvC;AAA8C,MAAA,SAAS,EAAE,KAAKR,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,IAAI,EAAC,MAAzB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,SAAS,EAAE,KAAKA,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,QAAQ,EAAE,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAJF,CADF,CADF;AAaD;;AA3B+B;;AA8BlC,MAAMS,QAAQ,GAAGC,MAAM,IAAI;AACzB,QAAMC,MAAM,GAAG,EAAf;AAEA,MAAI,CAACD,MAAM,CAACE,KAAZ,EAAmBL,KAAK,CAACM,MAAN,GAAe,aAAf;AAEnB,SAAOF,MAAP;AACD,CAND,C,CAQA;AACA;;;AAEA,eAAehB,OAAO,CAAC,IAAD,EAAO,IAAP,CAAP,EACb;AACAG,SAAS,CAAC;AAAEW,EAAAA,QAAF;AAAYK,EAAAA,IAAI,EAAE;AAAlB,CAAD,CAAT,CAA6Cf,SAA7C,CAFa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form'\n\n//import { psotEvent } from '../actions';\n\nclass EventsNew extends Component {\n  renderField(field) {\n    const {input, label, type, meta: {touched, error} } = field\n\n    return (\n      <div>\n        <input {...input} placeholder={label} type={type} />\n        {touched && error && <span>{error}</span>}\n      </div>\n    )\n  }\n\n  //redux-formを使用した入力formの実装 (field)\n  render() {\n    return (\n      <div>\n        <form>\n          <div><Field label=\"Title\" name=\"title\" type=\"text\" component={this.renderField}/></div>\n          <div><Field label=\"Body\" name=\"body\" type=\"text\" component={this.renderField}/></div>\n        \n          <div>\n            <input type=\"submit\" value=\"Submit\" disabled={false} />\n            <Link to=\"/\">Cancel</Link>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst validate = values => {\n  const errors = {}\n\n  if (!values.title) error.titile = \"Enter a tit\"\n\n  return errors\n}\n\n//あるアクションが発生した際に、reducerに状態に応じてActionを実行させる\n//const mapDispatchToProps = ({ postEvent })\n\nexport default connect(null, null)(\n  //redeux-formでeventsnewをデコレートする\n  reduxForm({ validate, form: 'eventNewForm'})(EventsNew)\n)"]},"metadata":{},"sourceType":"module"}