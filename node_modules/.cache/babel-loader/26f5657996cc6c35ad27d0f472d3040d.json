{"ast":null,"code":"//外部との非同期処理を行うパッケージ\nimport axios from 'axios'; //状態遷移を管理する\n\nexport const READ_EVENTS = 'READ_EVENTS';\nconst ROOT_URL = 'https://udemy-utils.herokuapp.com/api/v1';\nconst QUERYSTRING = '?token=token123'; //actionをdispatchでreducerに渡していく\n//thunkを導入すると、actionの代わりに関数を返すことができるようになる\n\nexport const readEvents = () => async dispatch => {\n  const response = await axios.get(`${ROOT_URL}/events${QUERYSTRING}`);\n  dispatch({\n    type: READ_EVENTS,\n    response\n  });\n};\nexport const postEvents = () => async dispatch => {\n  const response = await axios.get(`${ROOT_URL}/events${QUERYSTRING}`);\n  dispatch({\n    type: CREATE_EVENTS,\n    response\n  });\n};","map":{"version":3,"sources":["/Users/okanotakumi/Desktop/git/react-prc/src/actions/index.js"],"names":["axios","READ_EVENTS","ROOT_URL","QUERYSTRING","readEvents","dispatch","response","get","type","postEvents","CREATE_EVENTS"],"mappings":"AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAG,aAApB;AAGP,MAAMC,QAAQ,GAAG,0CAAjB;AACA,MAAMC,WAAW,GAAG,iBAApB,C,CAEA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEL,QAAS,UAASC,WAAY,EAA3C,CAAvB;AACAE,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAEP,WAAP;AAAoBK,IAAAA;AAApB,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMG,UAAU,GAAG,MAAM,MAAMJ,QAAN,IAAkB;AAC9C,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEL,QAAS,UAASC,WAAY,EAA3C,CAAvB;AACAE,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAEE,aAAP;AAAsBJ,IAAAA;AAAtB,GAAD,CAAR;AACH,CAHM","sourcesContent":["\n//外部との非同期処理を行うパッケージ\nimport axios from 'axios'\n\n//状態遷移を管理する\nexport const READ_EVENTS = 'READ_EVENTS'\n\n\nconst ROOT_URL = 'https://udemy-utils.herokuapp.com/api/v1'\nconst QUERYSTRING = '?token=token123'\n\n//actionをdispatchでreducerに渡していく\n//thunkを導入すると、actionの代わりに関数を返すことができるようになる\nexport const readEvents = () => async dispatch => {\n    const response = await axios.get(`${ROOT_URL}/events${QUERYSTRING}`)\n    dispatch({type: READ_EVENTS, response})\n}\n\nexport const postEvents = () => async dispatch => {\n    const response = await axios.get(`${ROOT_URL}/events${QUERYSTRING}`)\n    dispatch({type: CREATE_EVENTS, response})\n}\n"]},"metadata":{},"sourceType":"module"}