{"ast":null,"code":"var _jsxFileName = \"/Users/okanotakumi/Desktop/git/react-prc/src/App.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst App = () => /*#__PURE__*/React.createElement(Counter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 20\n  }\n});\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Flagment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, \"count : \", this.state.count), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, \"+1\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, \"-1\"));\n  }\n\n} // const App = () => {\n//   const profile = [\n//     {name: \"Taro\", age: 20},\n//     {name: \"Batako\", age: 19},\n//     {name: \"NoAge\"}\n//   ]\n//   return (\n//     <div>\n//       {\n//         profile.map((profile, index) => {\n//           return <User name={profile.name} age={profile.age} key={index} />\n//         })\n//       }\n//     </div>\n//   )\n// }\n// const User = (props) => {\n//   return (\n//     <div>\n//       hi! i'm {props.name}. {props.age} old.\n//     </div>\n//   )\n// }\n//初期値の設定\n// User.defaultProps = {\n//   age : 1\n// }\n//propの型の設定\n// User.propTypes = {\n//   name : PropTypes.string.isRequired,\n//   age : PropTypes.number\n// }\n//propsは変更不可能な値。stateは変更可能な値\n\n\nexport default App;","map":{"version":3,"sources":["/Users/okanotakumi/Desktop/git/react-prc/src/App.js"],"names":["React","Component","PropTypes","App","Counter","constructor","props","state","count","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,GAAG,GAAG,mBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAnB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC9BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAG;AAAT,KAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACT,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAc,KAAKF,KAAL,CAAWC,KAAzB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF;AAOC;;AAd6B,C,CAiBhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst App = () => (<Counter></Counter>)\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {count : 0}\n  }\n\n  render() {\n  return (\n    <React.Flagment>\n      <div>count : {this.state.count}</div>\n      <button>+1</button>\n      <button>-1</button>\n    </React.Flagment>\n  )\n  }\n}\n\n// const App = () => {\n//   const profile = [\n//     {name: \"Taro\", age: 20},\n//     {name: \"Batako\", age: 19},\n//     {name: \"NoAge\"}\n//   ]\n//   return (\n//     <div>\n//       {\n//         profile.map((profile, index) => {\n//           return <User name={profile.name} age={profile.age} key={index} />\n//         })\n//       }\n//     </div>\n//   )\n// }\n\n// const User = (props) => {\n//   return (\n//     <div>\n//       hi! i'm {props.name}. {props.age} old.\n//     </div>\n//   )\n// }\n\n//初期値の設定\n// User.defaultProps = {\n//   age : 1\n// }\n\n//propの型の設定\n// User.propTypes = {\n//   name : PropTypes.string.isRequired,\n//   age : PropTypes.number\n// }\n\n//propsは変更不可能な値。stateは変更可能な値\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}