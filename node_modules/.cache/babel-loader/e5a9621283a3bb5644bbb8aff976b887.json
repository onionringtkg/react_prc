{"ast":null,"code":"var _jsxFileName = \"/Users/okanotakumi/Desktop/git/react-prc/src/components/events_index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { readEvents } from '../actions'; //import PropTypes from 'prop-types';\n\nclass EventsIndex extends Component {\n  //コンポーネントがマウントされた際に呼ばれるメソッド\n  //イベント一覧を表示する\n  componentDidMount() {\n    this.props.readEvents();\n  }\n\n  renderEvents() {\n    return _.map(this.props.events, event);\n  }\n\n  render() {\n    const props = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }, \"Body\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, this.renderEvents()));\n  }\n\n} //stateとactioをcomponentに関連づけるコーディング　start\n//このコンポーネントに必要なものをstateから取り出して、どのオブジェクトをcomponentのpropsとして対応させるのかを関数の戻り値で定義\n\n\nconst mapStateToProps = state => ({\n  events: state.events\n}); //あるアクションが発生した際に、reducerに状態に応じてActionを実行させる\n//const mapDispatchToProps = ({increment, decrement})でも同意\n\n\nconst mapDispatchToProps = {\n  readEvents\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsIndex); //stateとactioをcomponentに関連づけるコーディング　fin","map":{"version":3,"sources":["/Users/okanotakumi/Desktop/git/react-prc/src/components/events_index.js"],"names":["React","Component","connect","readEvents","EventsIndex","componentDidMount","props","renderEvents","_","map","events","event","render","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B,C,CACA;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClC;AACA;AACAI,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWH,UAAX;AACD;;AAEDI,EAAAA,YAAY,GAAG;AACb,WAAOC,CAAC,CAACC,GAAF,CAAM,KAAKH,KAAL,CAAWI,MAAjB,EAAyBC,KAAzB,CAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMN,KAAK,GAAG,KAAKA,KAAnB;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF,CADF,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,YAAL,EADH,CAXF,CADF;AAiBD;;AA/BiC,C,CAkCpC;AACA;;;AACA,MAAMM,eAAe,GAAGC,KAAK,KAAK;AAAEJ,EAAAA,MAAM,EAAEI,KAAK,CAACJ;AAAhB,CAAL,CAA7B,C,CACA;AACA;;;AACA,MAAMK,kBAAkB,GAAI;AAAEZ,EAAAA;AAAF,CAA5B;AAEA,eAAeD,OAAO,CAACW,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,WAA7C,CAAf,C,CACA","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { readEvents } from '../actions'\n//import PropTypes from 'prop-types';\n\nclass EventsIndex extends Component {\n  //コンポーネントがマウントされた際に呼ばれるメソッド\n  //イベント一覧を表示する\n  componentDidMount() {\n    this.props.readEvents()\n  }\n\n  renderEvents() {\n    return _.map(this.props.events, event)\n  }\n\n  render() {\n    const props = this.props\n\n    return (\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Title</th>\n              <th>Body</th>\n            </tr>\n          </thead>\n        </table>\n\n        <tbody>\n          {this.renderEvents()}\n        </tbody>\n      </div>\n    )\n  }\n}\n\n//stateとactioをcomponentに関連づけるコーディング　start\n//このコンポーネントに必要なものをstateから取り出して、どのオブジェクトをcomponentのpropsとして対応させるのかを関数の戻り値で定義\nconst mapStateToProps = state => ({ events: state.events })\n//あるアクションが発生した際に、reducerに状態に応じてActionを実行させる\n//const mapDispatchToProps = ({increment, decrement})でも同意\nconst mapDispatchToProps = ({ readEvents })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsIndex)\n//stateとactioをcomponentに関連づけるコーディング　fin\n"]},"metadata":{},"sourceType":"module"}