{"ast":null,"code":"var _jsxFileName = \"/Users/okanotakumi/Desktop/git/react-prc/src/components/events_show.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { getEvent, deleteEvent, putEvent } from '../actions';\n\nclass EventsShow extends Component {\n  //onSubmit をバインドする\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props;\n  }\n\n  renderField(field) {\n    const {\n      input,\n      label,\n      type,\n      meta: {\n        touched,\n        error\n      }\n    } = field;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n      placeholder: label,\n      type: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    })), touched && error && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 30\n      }\n    }, error));\n  }\n\n  async onDeleteClick() {\n    const {\n      id\n    } = this.props.match.params;\n    await this.props.deleteEvent(id);\n    this.props.history.push('/');\n  }\n\n  async onSubmit(values) {\n    //await this.props.postEvent(values)\n    //トップページの履歴をプッシュ\n    this.props.history.push('/');\n  } //redux-formを使用した入力formの実装 (field)\n\n\n  render() {\n    //pristine は入力なし状態\n    const {\n      handleSubmit,\n      pristine,\n      submitting\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Title\",\n      name: \"title\",\n      type: \"text\",\n      component: this.renderField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Body\",\n      name: \"body\",\n      type: \"text\",\n      component: this.renderField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      disabled: pristine || submitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      onClick: this.onDeleteClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"Delete\"))));\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n  if (!values.title) errors.title = \"Enter a title, please.\";\n  if (!values.body) errors.body = \"Enter a title, please.\";\n  return errors;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const event = state.events[ownProps.match.params.id];\n  return {\n    initialValues: event,\n    event\n  };\n}; //あるアクションが発生した際に、reducerに状態に応じてActionを実行させる\n\n\nconst mapDispatchToProps = {\n  deleteEvent\n};\nexport default connect(mapStateToProps, mapDispatchToProps)( //redeux-formでeventsnewをデコレートする\n//enableReinitialize: true -> 更新画面表示に必要\nreduxForm({\n  validate,\n  form: 'eventShowForm',\n  enableReinitialize: true\n})(EventsShow));","map":{"version":3,"sources":["/Users/okanotakumi/Desktop/git/react-prc/src/components/events_show.js"],"names":["React","Component","connect","Link","Field","reduxForm","getEvent","deleteEvent","putEvent","EventsShow","constructor","props","onSubmit","bind","onDeleteClick","componentDidMount","id","renderField","field","input","label","type","meta","touched","error","match","params","history","push","values","render","handleSubmit","pristine","submitting","validate","errors","title","body","mapStateToProps","state","ownProps","event","events","initialValues","mapDispatchToProps","form","enableReinitialize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form'\n\nimport { getEvent, deleteEvent, putEvent } from '../actions';\n\nclass EventsShow extends Component {\n  //onSubmit をバインドする\n  constructor(props) {\n    super(props)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.onDeleteClick = this.onDeleteClick.bind(this)\n\n  }\n\n  componentDidMount() {\n    const { id }  = this.props\n  }\n\n  renderField(field) {\n    const {input, label, type, meta: {touched, error} } = field\n\n    return (\n      <div>\n        <input {...input} placeholder={label} type={type} />\n        {touched && error && <span>{error}</span>}\n      </div>\n    )\n  }\n\n  async onDeleteClick() {\n    const { id } = this.props.match.params\n    await this.props.deleteEvent(id)\n    this.props.history.push('/')\n  }\n\n  async onSubmit(values) {\n    //await this.props.postEvent(values)\n    //トップページの履歴をプッシュ\n    this.props.history.push('/')\n  } \n\n  //redux-formを使用した入力formの実装 (field)\n  render() {\n    //pristine は入力なし状態\n    const { handleSubmit, pristine, submitting } = this.props\n\n    return (\n      <div>\n        <form onSubmit={handleSubmit(this.onSubmit)}>\n          <div><Field label=\"Title\" name=\"title\" type=\"text\" component={this.renderField}/></div>\n          <div><Field label=\"Body\" name=\"body\" type=\"text\" component={this.renderField}/></div>\n        \n          <div>\n            <input type=\"submit\" value=\"Submit\" disabled={pristine || submitting} />\n            <Link to=\"/\">Cancel</Link>\n            <Link to=\"/\" onClick={this.onDeleteClick}>Delete</Link>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst validate = values => {\n  const errors = {}\n\n  if (!values.title) errors.title = \"Enter a title, please.\"\n  if (!values.body) errors.body = \"Enter a title, please.\"\n\n  return errors\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const event = state.events[ownProps.match.params.id]\n  return { initialValues: event, event }\n}\n//あるアクションが発生した際に、reducerに状態に応じてActionを実行させる\nconst mapDispatchToProps = ({ deleteEvent })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  //redeux-formでeventsnewをデコレートする\n  //enableReinitialize: true -> 更新画面表示に必要\n  reduxForm({ validate, form: 'eventShowForm', enableReinitialize: true})(EventsShow)\n)"]},"metadata":{},"sourceType":"module"}