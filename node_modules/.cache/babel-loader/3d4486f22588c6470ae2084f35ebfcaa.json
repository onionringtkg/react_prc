{"ast":null,"code":"var _jsxFileName = \"/Users/okanotakumi/Desktop/git/react-prc/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; //Provider などに必要な要素のインポート\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers';\nimport thunk from 'redux-thunk'; //デバック\n\nimport { composeWithDevTools } from 'redux-devtools-extension'; //リンクボタンの設定\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './index.css';\nimport EventsIndex from './components/events_index';\nimport EventsNew from './components/events_new';\nimport * as serviceWorker from './serviceWorker'; //このstoreはアプリ内で唯一のもの。全てのstateはこのstoreに集約されている。\n\nconst enhancer = process.env.NODE_ENV === applyMiddleware(thunk);\nconst store = createStore(reducer, enhancer);\nReactDOM.render(\n/*#__PURE__*/\n//Providerでくくることで、どこからでもstore(state)にアクセスできるようになる\n//コンポーネント間の分岐を行う\nReact.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  exaxt: true,\n  path: \"/events/new\",\n  component: EventsNew,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(Route, {\n  exaxt: true,\n  path: \"/\",\n  component: EventsIndex,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 11\n  }\n}))))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/okanotakumi/Desktop/git/react-prc/src/index.js"],"names":["React","ReactDOM","createStore","applyMiddleware","Provider","reducer","thunk","composeWithDevTools","BrowserRouter","Route","Switch","EventsIndex","EventsNew","serviceWorker","enhancer","process","env","NODE_ENV","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CACA;;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA4C,kBAA5C;AAEA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAEA;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KACfd,eAAe,CAACG,KAAD,CADjB;AAEA,MAAMY,KAAK,GAAGhB,WAAW,CAACG,OAAD,EAAUS,QAAV,CAAzB;AAEAb,QAAQ,CAACkB,MAAT;AAAA;AACE;AACA;AACA,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,aAAlB;AAAgC,EAAA,SAAS,EAAEN,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAED,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF,CADF,CADF,CAHF,EAaES,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAbF,E,CAgBA;AACA;AACA;;AACAR,aAAa,CAACS,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//Provider などに必要な要素のインポート\nimport { createStore, applyMiddleware} from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\n\nimport thunk from 'redux-thunk'\n//デバック\nimport { composeWithDevTools } from 'redux-devtools-extension'\n//リンクボタンの設定\nimport { BrowserRouter, Route, Switch} from 'react-router-dom'\n\nimport './index.css';\nimport EventsIndex from './components/events_index';\nimport EventsNew from './components/events_new';\nimport * as serviceWorker from './serviceWorker';\n\n//このstoreはアプリ内で唯一のもの。全てのstateはこのstoreに集約されている。\nconst enhancer = process.env.NODE_ENV === \n  applyMiddleware(thunk)\nconst store = createStore(reducer, enhancer)\n\nReactDOM.render(\n  //Providerでくくることで、どこからでもstore(state)にアクセスできるようになる\n  //コンポーネント間の分岐を行う\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <Switch>\n          <Route exaxt path=\"/events/new\" component={EventsNew} />\n          <Route exaxt path=\"/\" component={EventsIndex} />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}