{"ast":null,"code":"var _jsxFileName = \"/Users/okanotakumi/Desktop/git/react-prc/src/components/events_index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { increment, decrement } from '../actions'; //import PropTypes from 'prop-types';\n\nclass EventsIndex extends Component {\n  //reduxにおいては、reducerで行うので、不要になる。\n  //hundlePlusButton, hundleMinusButtonはaction createrで行うので不要\n  // constructor(props) {\n  //   super(props)\n  //   this.state = {count : 0}\n  // }\n  // //setStateが実行されると、コールバックでrender()が実行される。\n  // hundlePlusButton = () => {\n  //   this.setState({count : this.state.count + 1})\n  // }\n  // hundleMinusButton = () => {\n  //   this.setState({count : this.state.cuont - 1})\n  // }\n  componentDidMount() {\n    this.props.readEvents();\n  }\n\n  render() {\n    const props = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"value : \", props.value), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: props.increment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"+1\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: props.decrement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"-1\"));\n  }\n\n} //stateとactioをcomponentに関連づけるコーディング　start\n//このコンポーネントに必要なものをstateから取り出して、どのオブジェクトをcomponentのpropsとして対応させるのかを関数の戻り値で定義\n\n\nconst mapStateToProps = state => ({\n  value: state.count.value\n}); //あるアクションが発生した際に、reducerに状態に応じてActionを実行させる\n//const mapDispatchToProps = ({increment, decrement})でも同意\n\n\nconst mapDispatchToProps = dispatch => ({\n  readEvents\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsIndex); //stateとactioをcomponentに関連づけるコーディング　fin\n//propsの基礎\n// const App = () => {\n//   const profile = [\n//     {name: \"Taro\", age: 20},\n//     {name: \"Batako\", age: 19},\n//     {name: \"NoAge\"}\n//   ]\n//   return (\n//     <div>\n//       {\n//         profile.map((profile, index) => {\n//           return <User name={profile.name} age={profile.age} key={index} />\n//         })\n//       }\n//     </div>\n//   )\n// }\n// const User = (props) => {\n//   return (\n//     <div>\n//       hi! i'm {props.name}. {props.age} old.\n//     </div>\n//   )\n// }\n//初期値の設定\n// User.defaultProps = {\n//   age : 1\n// }\n//propの型の設定\n// User.propTypes = {\n//   name : PropTypes.string.isRequired,\n//   age : PropTypes.number\n// }\n//propsは変更不可能な値。stateは変更可能な値","map":{"version":3,"sources":["/Users/okanotakumi/Desktop/git/react-prc/src/components/events_index.js"],"names":["React","Component","connect","increment","decrement","EventsIndex","componentDidMount","props","readEvents","render","value","mapStateToProps","state","count","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,YAArC,C,CACA;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAClC;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEAK,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,UAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMF,KAAK,GAAG,KAAKA,KAAnB;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcA,KAAK,CAACG,KAApB,CADF,eAEE;AAAQ,MAAA,OAAO,EAAEH,KAAK,CAACJ,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEI,KAAK,CAACH,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF;AAOD;;AAhCiC,C,CAmCpC;AACA;;;AACA,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAACF,EAAAA,KAAK,EAAEE,KAAK,CAACC,KAAN,CAAYH;AAApB,CAAL,CAA7B,C,CACA;AACA;;;AACA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AAAEP,EAAAA;AAAF,CAAL,CAAnC;;AAEA,eAAeN,OAAO,CAACS,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CT,WAA7C,CAAf,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { increment, decrement } from '../actions'\n//import PropTypes from 'prop-types';\n\nclass EventsIndex extends Component {\n  //reduxにおいては、reducerで行うので、不要になる。\n  //hundlePlusButton, hundleMinusButtonはaction createrで行うので不要\n\n  // constructor(props) {\n  //   super(props)\n  //   this.state = {count : 0}\n  // }\n\n  // //setStateが実行されると、コールバックでrender()が実行される。\n  // hundlePlusButton = () => {\n  //   this.setState({count : this.state.count + 1})\n  // }\n\n  // hundleMinusButton = () => {\n  //   this.setState({count : this.state.cuont - 1})\n  // }\n\n  componentDidMount() {\n    this.props.readEvents()\n  }\n\n  render() {\n    const props = this.props\n\n    return (\n      <div>\n        <div>value : {props.value}</div>\n        <button onClick={props.increment}>+1</button>\n        <button onClick={props.decrement}>-1</button>\n      </div>\n    )\n  }\n}\n\n//stateとactioをcomponentに関連づけるコーディング　start\n//このコンポーネントに必要なものをstateから取り出して、どのオブジェクトをcomponentのpropsとして対応させるのかを関数の戻り値で定義\nconst mapStateToProps = state => ({value: state.count.value})\n//あるアクションが発生した際に、reducerに状態に応じてActionを実行させる\n//const mapDispatchToProps = ({increment, decrement})でも同意\nconst mapDispatchToProps = dispatch => ({ readEvents })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsIndex)\n//stateとactioをcomponentに関連づけるコーディング　fin\n\n//propsの基礎\n// const App = () => {\n//   const profile = [\n//     {name: \"Taro\", age: 20},\n//     {name: \"Batako\", age: 19},\n//     {name: \"NoAge\"}\n//   ]\n//   return (\n//     <div>\n//       {\n//         profile.map((profile, index) => {\n//           return <User name={profile.name} age={profile.age} key={index} />\n//         })\n//       }\n//     </div>\n//   )\n// }\n\n// const User = (props) => {\n//   return (\n//     <div>\n//       hi! i'm {props.name}. {props.age} old.\n//     </div>\n//   )\n// }\n\n//初期値の設定\n// User.defaultProps = {\n//   age : 1\n// }\n\n//propの型の設定\n// User.propTypes = {\n//   name : PropTypes.string.isRequired,\n//   age : PropTypes.number\n// }\n//propsは変更不可能な値。stateは変更可能な値\n\n"]},"metadata":{},"sourceType":"module"}