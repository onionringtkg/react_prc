{"ast":null,"code":"var _jsxFileName = \"/Users/okanotakumi/Desktop/git/react-prc/src/components/events_new.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form'; //import { psotEvents } from '../actions';\n\nclass EventsNew extends Component {\n  renderField(filed) {\n    const {\n      input,\n      label,\n      type,\n      meta: {\n        touched,\n        error\n      }\n    } = field;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Title\",\n      name: \"title\",\n      type: \"text\",\n      component: this.renderField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} //あるアクションが発生した際に、reducerに状態に応じてActionを実行させる\n//const mapDispatchToProps = ({ postEvents })\n\n\nexport default connect(null, null)(EventsNew); //stateとactioをcomponentに関連づけるコーディング　fin","map":{"version":3,"sources":["/Users/okanotakumi/Desktop/git/react-prc/src/components/events_new.js"],"names":["React","Component","connect","Link","Field","reduxForm","EventsNew","renderField","filed","input","label","type","meta","touched","error","field","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC,C,CAEA;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAChCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,IAAf;AAAqBC,MAAAA,IAAI,EAAE;AAACC,QAAAA,OAAD;AAAUC,QAAAA;AAAV;AAA3B,QAAgDC,KAAtD;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,OAAb;AAAqB,MAAA,IAAI,EAAC,OAA1B;AAAkC,MAAA,IAAI,EAAC,MAAvC;AAA8C,MAAA,SAAS,EAAE,KAAKT,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AAb+B,C,CAgBlC;AACA;;;AAEA,eAAeL,OAAO,CAAC,IAAD,EAAO,IAAP,CAAP,CAAoBI,SAApB,CAAf,C,CACA","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form'\n\n//import { psotEvents } from '../actions';\n\nclass EventsNew extends Component {\n  renderField(filed) {\n    const {input, label, type, meta: {touched, error} } = field\n  }\n\n  render() {\n    return (\n      <div>\n        <form>\n          <Field label=\"Title\" name=\"title\" type=\"text\" component={this.renderField}/>\n        </form>\n      </div>\n    )\n  }\n}\n\n//あるアクションが発生した際に、reducerに状態に応じてActionを実行させる\n//const mapDispatchToProps = ({ postEvents })\n\nexport default connect(null, null)(EventsNew)\n//stateとactioをcomponentに関連づけるコーディング　fin\n"]},"metadata":{},"sourceType":"module"}